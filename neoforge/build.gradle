plugins {
    id 'net.neoforged.gradle.userdev'
}

configurations.create("includedLibraries")
configurations.api.extendsFrom configurations.includedLibraries

project.addCoreProject()

subsystems {
    parchment {
        minecraftVersion = project.parchmentMinecraftVersion
        mappingsVersion = project.parchmentVersion
    }
}

sourceSets {
    configureEach {
        runs {
            modIdentifier "scena"
        }
    }
}

project.minecraft.accessTransformers.file project(":common").file("forge.accesstransformer.cfg")

project.runs {
    client { }

    server { }

    configureEach { run ->
        run.modSource project(":core").sourceSets.main
        run.modSource sourceSets.main
        run.jvmArguments.addAll "-Dmixin.debug=true", "-Dmixin.debug.export=true"
    }
}


project.dependencies.implementation "net.neoforged:neoforge:${project.forgeVersion}"
project.dependencies.includedLibraries("com.communi-suggestu.saecularia-caudices:saecularia-caudices-neoforge:${project.saeculariaCaudicesVersion}") {
    jarJar.ranged(it, buildSupportedVersionRange(project.saeculariaCaudicesVersion))
}

project.tasks.processResources.from(project(":common").file("forge.accesstransformer.cfg"), (CopySpec spec) -> {
    spec.into("META-INF")
    spec.rename("forge.accesstransformer.cfg", "accesstransformer.cfg")
})
project.setupResourceProcessing(project.tasks.processResources)

tasks.jarJar.configuration project.configurations.includedLibraries
tasks.jarJar.archiveClassifier.set("")
tasks.jar.archiveClassifier.set("slim")
tasks.assemble.dependsOn tasks.jarJar